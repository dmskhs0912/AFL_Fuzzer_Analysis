c
c
delete breakpoints 1
c
q
ls
b Parser::getObj(Object*, unsigned char*, CryptAlgorithm, int, int, int) 
r ./output/default/crashes/crash1 ./output/
bt
c
c
c
bt
c
c
c
c
c
bt
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
bt
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
vt
bt
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
cc
c
c
c
c
c
bt
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
bt
python
for _ in range(100000)
python
for _ in range(100000):
gdb.execute("continue")
python
for _ in range(100000):
 gdb.execute("continue")
bt
c
delete breakpoints 1
c
bt
q
q
b XRef.cc:808
r ./output/default/crashes/crash1 ./output/
list
p parser->buf1.cmd
p parser->buf1->cmd
p parser
c
c
c
c
c
p/x parser
disas
disassemble 
pd 0x555555626070
pd 0x5555556261a0
list
b XRef.cc:820
c
list
c
p parser
tele $rsp
pd
pd 9
pd 20
delete breakpoints *
info breakpoints 
delete breakpoints 1
delete breakpoints 2
info breakpoints 
disass
b * 0x00005555556584ba
c
p parser
p parser->buf1
xxd
x/s 0x7
p parser->buf2
c
p parser
p parser->buf1
python
for _ in range(500) :
 gdb.execute("continue")
p parser->buf1
p parser->buf2
bt
pd
pd 20
pd 100
pd 150
b * 0x555555658807
c
list
p parser->buf1
p parser->buf2
c
p parser->buf1
p parser->buf2
c
p parser->buf1
p parser->buf2
delete breakpoints 3
c
c
c
c
p parser->buf1
p parser->buf2
p parser->inlineImg 
p parser->buf1.cmd
condition 4 parser->buf1.cmd=="<<" && parser->buf2.cmd=="stream"
c
p parser
q
dprint Parser::getObj
start
b XRef::fetch(int, int, Object*) 
c
info breakpoints 
r ./output/default/crashes/crash1 ./output/
pd
pd 500
pd
pd
pd 20
pd 100
b * 0x5555556584bf
b * 0x5555556584dd
b * 0x5555556584fb
c
p parser->buf1
p parser->buf2
c
p parser->buf1
p parser->buf2
c
p parser->buf1
p parser
pd
c
p parser
c
p parser
p parser->buf1
pd 150
b * 0x555555658807
info breakpoints 
delete breakpoints 2 3 4 5
info breakpoints 
c
p parser->buf1
p parser->buf2
c
p parser->buf1
p parser->buf2
c
p parser->buf1
p parser->buf2
c
p parser->buf1
p parser->buf2
p obj
p *obj
pd
c
c
c
c
c
p *obj
pd Parser::getObj(Object*, unsigned char*, CryptAlgorithm, int, int, int) 
disassemble Parser::getObj(Object*, unsigned char*, CryptAlgorithm, int, int, int) 
p parser->buf1
p parser->buf2
q
q
